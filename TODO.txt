- Allow a maximum number of clients in one game.
- Ensure a client which doesn't read doesn't block other comms.
- Add a message count to the envelope.
- Ensure App Engine runs with only one instance.
- Store game state locally.
- Send a server message to sender if message to be sent is too large
  (intent "Error").
- Have Javascript client unpack server response with envelope+contents.

DONE:

- Give clients an identifier (probably via a cookie).
- Refactor cookie client ID code into a Client type.
- Prove websockets connectivity.
- Generate client ID for websocket connection.
- Test that a real websocket client does send cookies as expected.
- Fixed: Bug: Client ID cookie is lost after browser closes (but not after tab
  closes). Likely due to Max-Age not being set (value in seconds).
- Make adding a client to a hub concurrency-safe.
- Allow removing of clients from a hub (concurrency-safely).
- Shift echoing into the client.
- Add a client to a hub when it's created.
- Have a client message bounce to other clients in a hub.
- Remove a client from hub when it leaves.
- Does pings and pongs.
- Close a client connection if ping doesn't get a response in time.
- Set write deadlines. (Read deadlines are for pongs only.)
- Send a marshalled JSON message, and handle a marshalling error.
- Add "other clients" list into server response; a "From" field.
- Add own client ID into server response; a "To" field.
- Add server time into server response; a "Time" field.
- Describe message sending in README.
- Send a server message when you join (intent "Welcome").
- Update README to talk about Welcome message.
- Send a server message when a client joins (intent "Joiner").
- Make sure "From" is a list.
- Set the welcome "From" field to all other clients, so the new
  client knows all the peers.
- Duplicate clients IDs will shown in the From and To fields.
- Rename echoHandler to bounceHander.
- The connection closes if a client sends a message over 60 kilobytes.
- Put clients into a hub per group/game.
- Hub to remove itself from superhub when it has no clients.
- Explore wait groups to check the superhub really does empty
  when it should.
- Send a server message when a client leaves (intent "Leaver").
- Server to detect which game a client wants.
- Server to reject a client request with no game/group specified.
